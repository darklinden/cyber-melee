// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Proto
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct EOTTrigger : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
  public static EOTTrigger GetRootAsEOTTrigger(ByteBuffer _bb) { return GetRootAsEOTTrigger(_bb, new EOTTrigger()); }
  public static EOTTrigger GetRootAsEOTTrigger(ByteBuffer _bb, EOTTrigger obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EOTTrigger __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Proto.EOTType Eot { get { int o = __p.__offset(4); return o != 0 ? (Proto.EOTType)__p.bb.GetSbyte(o + __p.bb_pos) : Proto.EOTType.None; } }
  public Proto.EOTTriggerFireType TriggerType { get { int o = __p.__offset(6); return o != 0 ? (Proto.EOTTriggerFireType)__p.bb.GetSbyte(o + __p.bb_pos) : Proto.EOTTriggerFireType.Always; } }
  public int TriggerParam0 { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<Proto.EOTTrigger> CreateEOTTrigger(FlatBufferBuilder builder,
      Proto.EOTType eot = Proto.EOTType.None,
      Proto.EOTTriggerFireType trigger_type = Proto.EOTTriggerFireType.Always,
      int trigger_param0 = 0) {
    builder.StartTable(3);
    EOTTrigger.AddTriggerParam0(builder, trigger_param0);
    EOTTrigger.AddTriggerType(builder, trigger_type);
    EOTTrigger.AddEot(builder, eot);
    return EOTTrigger.EndEOTTrigger(builder);
  }

  public static void StartEOTTrigger(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddEot(FlatBufferBuilder builder, Proto.EOTType eot) { builder.AddSbyte(0, (sbyte)eot, 0); }
  public static void AddTriggerType(FlatBufferBuilder builder, Proto.EOTTriggerFireType triggerType) { builder.AddSbyte(1, (sbyte)triggerType, 0); }
  public static void AddTriggerParam0(FlatBufferBuilder builder, int triggerParam0) { builder.AddInt(2, triggerParam0, 0); }
  public static Offset<Proto.EOTTrigger> EndEOTTrigger(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Proto.EOTTrigger>(o);
  }
  public EOTTriggerT UnPack() {
    var _o = new EOTTriggerT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(EOTTriggerT _o) {
    _o.Eot = this.Eot;
    _o.TriggerType = this.TriggerType;
    _o.TriggerParam0 = this.TriggerParam0;
  }
  public static Offset<Proto.EOTTrigger> Pack(FlatBufferBuilder builder, EOTTriggerT _o) {
    if (_o == null) return default(Offset<Proto.EOTTrigger>);
    return CreateEOTTrigger(
      builder,
      _o.Eot,
      _o.TriggerType,
      _o.TriggerParam0);
  }
}

public class EOTTriggerT
{
  public Proto.EOTType Eot { get; set; }
  public Proto.EOTTriggerFireType TriggerType { get; set; }
  public int TriggerParam0 { get; set; }

  public EOTTriggerT() {
    this.Eot = Proto.EOTType.None;
    this.TriggerType = Proto.EOTTriggerFireType.Always;
    this.TriggerParam0 = 0;
  }
}


static public class EOTTriggerVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Eot*/, 1 /*Proto.EOTType*/, 1, false)
      && verifier.VerifyField(tablePos, 6 /*TriggerType*/, 1 /*Proto.EOTTriggerFireType*/, 1, false)
      && verifier.VerifyField(tablePos, 8 /*TriggerParam0*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
