// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Proto
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ServerBroadcastBattleStart : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
  public static ServerBroadcastBattleStart GetRootAsServerBroadcastBattleStart(ByteBuffer _bb) { return GetRootAsServerBroadcastBattleStart(_bb, new ServerBroadcastBattleStart()); }
  public static ServerBroadcastBattleStart GetRootAsServerBroadcastBattleStart(ByteBuffer _bb, ServerBroadcastBattleStart obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ServerBroadcastBattleStart __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long RoomId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public Proto.BattleCamp? Camps(int j) { int o = __p.__offset(6); return o != 0 ? (Proto.BattleCamp?)(new Proto.BattleCamp()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int CampsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<Proto.ServerBroadcastBattleStart> CreateServerBroadcastBattleStart(FlatBufferBuilder builder,
      long room_id = 0,
      VectorOffset campsOffset = default(VectorOffset)) {
    builder.StartTable(2);
    ServerBroadcastBattleStart.AddRoomId(builder, room_id);
    ServerBroadcastBattleStart.AddCamps(builder, campsOffset);
    return ServerBroadcastBattleStart.EndServerBroadcastBattleStart(builder);
  }

  public static void StartServerBroadcastBattleStart(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddRoomId(FlatBufferBuilder builder, long roomId) { builder.AddLong(0, roomId, 0); }
  public static void AddCamps(FlatBufferBuilder builder, VectorOffset campsOffset) { builder.AddOffset(1, campsOffset.Value, 0); }
  public static VectorOffset CreateCampsVector(FlatBufferBuilder builder, Offset<Proto.BattleCamp>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateCampsVectorBlock(FlatBufferBuilder builder, Offset<Proto.BattleCamp>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateCampsVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<Proto.BattleCamp>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateCampsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<Proto.BattleCamp>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartCampsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<Proto.ServerBroadcastBattleStart> EndServerBroadcastBattleStart(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Proto.ServerBroadcastBattleStart>(o);
  }
  public ServerBroadcastBattleStartT UnPack() {
    var _o = new ServerBroadcastBattleStartT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ServerBroadcastBattleStartT _o) {
    _o.RoomId = this.RoomId;
    _o.Camps = new List<Proto.BattleCampT>();
    for (var _j = 0; _j < this.CampsLength; ++_j) {_o.Camps.Add(this.Camps(_j).HasValue ? this.Camps(_j).Value.UnPack() : null);}
  }
  public static Offset<Proto.ServerBroadcastBattleStart> Pack(FlatBufferBuilder builder, ServerBroadcastBattleStartT _o) {
    if (_o == null) return default(Offset<Proto.ServerBroadcastBattleStart>);
    var _camps = default(VectorOffset);
    if (_o.Camps != null) {
      var __camps = new Offset<Proto.BattleCamp>[_o.Camps.Count];
      for (var _j = 0; _j < __camps.Length; ++_j) { __camps[_j] = Proto.BattleCamp.Pack(builder, _o.Camps[_j]); }
      _camps = CreateCampsVector(builder, __camps);
    }
    return CreateServerBroadcastBattleStart(
      builder,
      _o.RoomId,
      _camps);
  }
}

public class ServerBroadcastBattleStartT
{
  public long RoomId { get; set; }
  public List<Proto.BattleCampT> Camps { get; set; }

  public ServerBroadcastBattleStartT() {
    this.RoomId = 0;
    this.Camps = null;
  }
}


static public class ServerBroadcastBattleStartVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*RoomId*/, 8 /*long*/, 8, false)
      && verifier.VerifyVectorOfTables(tablePos, 6 /*Camps*/, Proto.BattleCampVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
