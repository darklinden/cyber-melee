// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Proto
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RequestEnter : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
  public static RequestEnter GetRootAsRequestEnter(ByteBuffer _bb) { return GetRootAsRequestEnter(_bb, new RequestEnter()); }
  public static RequestEnter GetRootAsRequestEnter(ByteBuffer _bb, RequestEnter obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RequestEnter __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(4); }
  public int OtherInfo(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int OtherInfoLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetOtherInfoBytes() { return __p.__vector_as_span<int>(6, 4); }
#else
  public ArraySegment<byte>? GetOtherInfoBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public int[] GetOtherInfoArray() { return __p.__vector_as_array<int>(6); }

  public static Offset<Proto.RequestEnter> CreateRequestEnter(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      VectorOffset other_infoOffset = default(VectorOffset)) {
    builder.StartTable(2);
    RequestEnter.AddOtherInfo(builder, other_infoOffset);
    RequestEnter.AddName(builder, nameOffset);
    return RequestEnter.EndRequestEnter(builder);
  }

  public static void StartRequestEnter(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddOtherInfo(FlatBufferBuilder builder, VectorOffset otherInfoOffset) { builder.AddOffset(1, otherInfoOffset.Value, 0); }
  public static VectorOffset CreateOtherInfoVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateOtherInfoVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateOtherInfoVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateOtherInfoVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartOtherInfoVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<Proto.RequestEnter> EndRequestEnter(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Proto.RequestEnter>(o);
  }
  public RequestEnterT UnPack() {
    var _o = new RequestEnterT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(RequestEnterT _o) {
    _o.Name = this.Name;
    _o.OtherInfo = new List<int>();
    for (var _j = 0; _j < this.OtherInfoLength; ++_j) {_o.OtherInfo.Add(this.OtherInfo(_j));}
  }
  public static Offset<Proto.RequestEnter> Pack(FlatBufferBuilder builder, RequestEnterT _o) {
    if (_o == null) return default(Offset<Proto.RequestEnter>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _other_info = default(VectorOffset);
    if (_o.OtherInfo != null) {
      var __other_info = _o.OtherInfo.ToArray();
      _other_info = CreateOtherInfoVector(builder, __other_info);
    }
    return CreateRequestEnter(
      builder,
      _name,
      _other_info);
  }
}

public class RequestEnterT
{
  public string Name { get; set; }
  public List<int> OtherInfo { get; set; }

  public RequestEnterT() {
    this.Name = null;
    this.OtherInfo = null;
  }
}


static public class RequestEnterVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Name*/, false)
      && verifier.VerifyVectorOfData(tablePos, 6 /*OtherInfo*/, 4 /*int*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
