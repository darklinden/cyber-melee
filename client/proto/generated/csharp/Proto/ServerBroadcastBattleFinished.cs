// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Proto
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ServerBroadcastBattleFinished : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
  public static ServerBroadcastBattleFinished GetRootAsServerBroadcastBattleFinished(ByteBuffer _bb) { return GetRootAsServerBroadcastBattleFinished(_bb, new ServerBroadcastBattleFinished()); }
  public static ServerBroadcastBattleFinished GetRootAsServerBroadcastBattleFinished(ByteBuffer _bb, ServerBroadcastBattleFinished obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ServerBroadcastBattleFinished __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool ResultSame { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public ulong WinCampRank(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(__p.__vector(o) + j * 8) : (ulong)0; }
  public int WinCampRankLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<ulong> GetWinCampRankBytes() { return __p.__vector_as_span<ulong>(6, 8); }
#else
  public ArraySegment<byte>? GetWinCampRankBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public ulong[] GetWinCampRankArray() { return __p.__vector_as_array<ulong>(6); }

  public static Offset<Proto.ServerBroadcastBattleFinished> CreateServerBroadcastBattleFinished(FlatBufferBuilder builder,
      bool result_same = false,
      VectorOffset win_camp_rankOffset = default(VectorOffset)) {
    builder.StartTable(2);
    ServerBroadcastBattleFinished.AddWinCampRank(builder, win_camp_rankOffset);
    ServerBroadcastBattleFinished.AddResultSame(builder, result_same);
    return ServerBroadcastBattleFinished.EndServerBroadcastBattleFinished(builder);
  }

  public static void StartServerBroadcastBattleFinished(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddResultSame(FlatBufferBuilder builder, bool resultSame) { builder.AddBool(0, resultSame, false); }
  public static void AddWinCampRank(FlatBufferBuilder builder, VectorOffset winCampRankOffset) { builder.AddOffset(1, winCampRankOffset.Value, 0); }
  public static VectorOffset CreateWinCampRankVector(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddUlong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateWinCampRankVectorBlock(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateWinCampRankVectorBlock(FlatBufferBuilder builder, ArraySegment<ulong> data) { builder.StartVector(8, data.Count, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateWinCampRankVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<ulong>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartWinCampRankVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static Offset<Proto.ServerBroadcastBattleFinished> EndServerBroadcastBattleFinished(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Proto.ServerBroadcastBattleFinished>(o);
  }
  public ServerBroadcastBattleFinishedT UnPack() {
    var _o = new ServerBroadcastBattleFinishedT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ServerBroadcastBattleFinishedT _o) {
    _o.ResultSame = this.ResultSame;
    _o.WinCampRank = new List<ulong>();
    for (var _j = 0; _j < this.WinCampRankLength; ++_j) {_o.WinCampRank.Add(this.WinCampRank(_j));}
  }
  public static Offset<Proto.ServerBroadcastBattleFinished> Pack(FlatBufferBuilder builder, ServerBroadcastBattleFinishedT _o) {
    if (_o == null) return default(Offset<Proto.ServerBroadcastBattleFinished>);
    var _win_camp_rank = default(VectorOffset);
    if (_o.WinCampRank != null) {
      var __win_camp_rank = _o.WinCampRank.ToArray();
      _win_camp_rank = CreateWinCampRankVector(builder, __win_camp_rank);
    }
    return CreateServerBroadcastBattleFinished(
      builder,
      _o.ResultSame,
      _win_camp_rank);
  }
}

public class ServerBroadcastBattleFinishedT
{
  public bool ResultSame { get; set; }
  public List<ulong> WinCampRank { get; set; }

  public ServerBroadcastBattleFinishedT() {
    this.ResultSame = false;
    this.WinCampRank = null;
  }
}


static public class ServerBroadcastBattleFinishedVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*ResultSame*/, 1 /*bool*/, 1, false)
      && verifier.VerifyVectorOfData(tablePos, 6 /*WinCampRank*/, 8 /*ulong*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
